name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Package
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' || (matrix.os == 'windows-latest' && runner.os == 'Windows')
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            npm run package:win
          elif [ "${{ runner.os }}" = "macOS" ]; then
            npm run package:mac
          else
            npm run package:linux
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-todo-${{ runner.os }}
          path: |
            release/*
            !release/*.blockmap
            !release/*.yaml
          compression-level: 0  # Faster uploads for large files

  release-gh:
    name: Create Release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: 'electron-todo-*'
          merge-multiple: true

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: v${{ steps.version.outputs.version }}
          body: |
            ### Changes
            - Initial release
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/electron-todo-*/*
          asset_name: ${{ github.workspace }}/${{ github.event.repository.name }}-${{ steps.version.outputs.version }}-${{ runner.os }}.zip
          asset_content_type: application/zip
